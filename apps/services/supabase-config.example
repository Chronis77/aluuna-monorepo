# =============================================================================
# Aluuna Services Environment Configuration (Supabase)
# =============================================================================

# Server Configuration
NODE_ENV=development
PORT=3000
HOST=0.0.0.0

# Supabase Database Configuration
# Choose the appropriate connection type based on your needs:

# 1. Direct Connection (Development, Low Traffic)
DATABASE_URL=postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres

# 2. Transaction Pooler (Production, High Traffic) - RECOMMENDED
DATABASE_URL=postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:6543/postgres?pgbouncer=true
DIRECT_URL=postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres

# 3. Session Pooler (Complex Transactions)
# DATABASE_URL=postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres?connection_limit=1&pool_timeout=0

# Redis Configuration (You can use Supabase's Redis or external Redis)
REDIS_URL=redis://redis:6379
REDIS_PASSWORD=
REDIS_HOST=redis
REDIS_PORT=6379

# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4000

# Security
ALUUNA_APP_API_KEY=your-secret-api-key-here
JWT_SECRET=your-jwt-secret-here
SESSION_SECRET=your-session-secret-here

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:19006,http://localhost:8080
CORS_CREDENTIALS=true

# Logging
LOG_LEVEL=info
LOG_FORMAT=json

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# File Upload
MAX_FILE_SIZE=10485760
UPLOAD_PATH=./uploads

# Health Check
HEALTH_CHECK_INTERVAL=30000

# =============================================================================
# Connection Type Guide:
# =============================================================================
# 
# DIRECT CONNECTION (Port 5432):
# - Use for: Development, testing, low-traffic apps
# - Pros: Lowest latency, full PostgreSQL features
# - Cons: Limited to 100 concurrent connections
# - URL: postgresql://user:pass@host:5432/db
#
# TRANSACTION POOLER (Port 6543):
# - Use for: Production apps, high traffic, Railway deployment
# - Pros: Handles connection spikes, better resource management
# - Cons: Some PostgreSQL features limited (prepared statements, etc.)
# - URL: postgresql://user:pass@host:6543/db?pgbouncer=true
#
# SESSION POOLER:
# - Use for: Apps requiring session state, complex transactions
# - Pros: Maintains session state, good for complex operations
# - Cons: Higher resource usage, fewer concurrent connections
# - URL: postgresql://user:pass@host:5432/db?connection_limit=1&pool_timeout=0
#
# ============================================================================= 